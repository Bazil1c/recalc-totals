
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДоступнаРаботаСMSSQL = ОбработкаОбъект.ОпределитьДоступностьСервераMSSQL();

	Если НЕ ДоступнаРаботаСMSSQL Тогда
		Элементы.ГруппаНастройкиПодключенияSQL.Видимость = ДоступнаРаботаСMSSQL;
		Элементы.ОчищатьТаблицыСредствамиSQL.Видимость = ДоступнаРаботаСMSSQL; 
		Элементы.ФормаПроверитьПодключениеКСерверуSQL.Видимость = ДоступнаРаботаСMSSQL;
	Иначе
		СтруктураСоединения = ОбработкаОбъект.ПолучитьСтруктуруСоединенияИнформационнойБазы();
		Объект.ИмяСервера 	= СтруктураСоединения.ИмяСервера;
		Объект.ИмяБД 		= СтруктураСоединения.ИмяБД;
	КонецЕсли; 
	
	СформироватьСтруктуруМетаданных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	Если НЕ ДоступнаРаботаСMSSQL Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обработка предназначена для работы в клиент-серверном варианте с СУБД MS-SQL.
			|Очистка таблиц итогов средствами СУБД будет недоступна.");	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ДоступнаРаботаСMSSQL Тогда
		
		ПроверяемыеРеквизиты.Добавить("Объект.ИмяСервера");
		ПроверяемыеРеквизиты.Добавить("Объект.ИмяБД");
		
		Если НЕ Объект.АутентификацияОС Тогда
		
			ПроверяемыеРеквизиты.Добавить("Объект.ИмяПользователя");
		
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовиФормы

&НаКлиенте
Процедура АутентификацияОСПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхПометкаПриИзменении(Элемент)
	
	РекурсивноВнизСнятьУстановитьПометки(Элементы.ДеревоДанных.ТекущиеДанные, Элементы.ДеревоДанных.ТекущиеДанные.Пометка);
	
	Если Элементы.ДеревоДанных.ТекущиеДанные.Пометка Тогда
		РекурсивноВверхСнятьУстановитьПометки(Элементы.ДеревоДанных.ТекущиеДанные, 
			Элементы.ДеревоДанных.ТекущиеДанные.Пометка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	Если (НЕ ДоступнаРаботаСMSSQL ИЛИ НЕ Объект.ОчищатьТаблицыСредствамиSQL) И НЕ Объект.ПересчитыватьИтоги Тогда
		Возврат;
	КонецЕсли;	
	
	СохранитьПараметрыПодключения();
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Начало обработки. " + ТекущаяДата());
	
	ВыполнитьОбработку();
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Символы.ПС + "Выполнение обработки завершено. " + ТекущаяДата());

КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометки(Команда)
	РекурсивноВнизСнятьУстановитьПометки(ДеревоДанных, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометки(Команда)
	РекурсивноВнизСнятьУстановитьПометки(ДеревоДанных, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеКСерверуSQL(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;	
	
	Отказ = Ложь;
	
	Если ВыполнятьНаСервере Тогда
		ПроверитьПодключениеКСерверуSQLНаСервере(Отказ);	
	Иначе
		ПроверитьПодключениеКСерверуSQLНаКлиенте(Отказ);
	КонецЕсли; 
	
	Если НЕ Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Подключение выполнено успешно.");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции выполнения команд на SQL
 
&НаСервере
Процедура СохранитьПараметрыПодключения()
	
	ПараметрыПодключения = ПараметрыПодключения();

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СохранитьПараметрыПодключения(ПараметрыПодключения);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруМетаданных()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ДеревоРегистров = РеквизитФормыВЗначение("ДеревоДанных");
	
	ОбработкаОбъект.СформироватьСтруктуруМетаданных(ДеревоРегистров);
	
	ЗначениеВРеквизитФормы(ДеревоРегистров, "ДеревоДанных");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеКСерверуSQLНаКлиенте(Отказ)
	
	ПараметрыПодключения = ПараметрыПодключения();
	
	ПроверитьПодключение(ПараметрыПодключения, Отказ);

КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеКСерверуSQLНаСервере(Отказ)
	
	ПараметрыПодключения = ПараметрыПодключения();
	
	ПроверитьПодключение(ПараметрыПодключения, Отказ);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьПодключение(ПараметрыПодключения, Отказ)

	Connection = Неопределено;

	ОткрытьПодключение(ПараметрыПодключения, Connection, Отказ);
	
	ЗакрытьПодключение(Connection);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОткрытьПодключение(ПараметрыПодключения, Connection, Отказ = Ложь)
	
	Попытка

		Connection = Новый COMОбъект("ADODB.Connection");
		ConnectionString = ПараметрыПодключения.СтрокаПодключения;
		
		Если Connection.State = 0 Тогда
			Connection.Open(ConnectionString);
		КонецЕсли;
		
	Исключение
		Connection = Неопределено;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(), , , , Отказ);
	КонецПопытки;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗакрытьПодключение(Connection)
	
	Если НЕ Connection = Неопределено Тогда
		Connection.Close();	
		Connection = Неопределено;
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтогиРегистров(ИменаРегистров)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПересчитатьИтогиРегистров(ИменаРегистров);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицыРегистровНаКлиенте(ИменаРегистров)
	
	ПараметрыПодключения = ПараметрыПодключения();
	
	ОчиститьТаблицыРегистров(ПараметрыПодключения, ИменаРегистров);

КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицыРегистровНаСервере(ИменаОчищаемыхТаблиц)
	
	ПараметрыПодключения = ПараметрыПодключения();
	
	ОчиститьТаблицыРегистров(ПараметрыПодключения, ИменаОчищаемыхТаблиц);

КонецПроцедуры

&НаСервере
Функция ПараметрыПодключения()
	
	ПараметрыПодключения = Новый Структура;
	ПараметрыПодключения.Вставить("ИмяСервера", Объект.ИмяСервера);
	ПараметрыПодключения.Вставить("ИмяБД", Объект.ИмяБД);
	ПараметрыПодключения.Вставить("АутентификацияОС", Объект.АутентификацияОС);
	ПараметрыПодключения.Вставить("ИмяПользователя", Объект.ИмяПользователя);
	ПараметрыПодключения.Вставить("Пароль", Объект.Пароль);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтрокаПодключения = ОбработкаОбъект.СтрокаПодключения(ПараметрыПодключения);

	ПараметрыПодключения.Вставить("СтрокаПодключения", СтрокаПодключения);
	
	Возврат ПараметрыПодключения;	
	
КонецФункции	

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТаблицыРегистров(ПараметрыПодлючения, ИменаОчищаемыхТаблиц)
	
	Connection = Неопределено; 
	ОткрытьПодключение(ПараметрыПодлючения, Connection);

	ОчиститьТаблицыСредствамиSQL(Connection, ПараметрыПодлючения, ИменаОчищаемыхТаблиц);
	
	ЗакрытьПодключение(Connection);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработку()
	
	ИменаРегистров = ПодготовитьИменаРегистров();
	
	Если Объект.ОчищатьТаблицыСредствамиSQL Тогда
		
		ИменаОчищаемыхТаблиц = ПодготовитьИменаОчищаемыхТаблиц(ИменаРегистров);
		
		Если ВыполнятьНаСервере Тогда
			ОчиститьТаблицыРегистровНаСервере(ИменаОчищаемыхТаблиц);		
		Иначе
			ОчиститьТаблицыРегистровНаКлиенте(ИменаОчищаемыхТаблиц);
		КонецЕсли; 

	КонецЕсли; 
	
	Если Объект.ПересчитыватьИтоги Тогда
		ПересчитатьИтогиРегистров(ИменаРегистров);
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Функция ПодготовитьИменаРегистров()
	
	ИменаРегистров = Новый Массив;
	
	КоллекцияСтрокДерева = ДеревоДанных.ПолучитьЭлементы();

	Для каждого СтрокаДереваВидОбъекта Из КоллекцияСтрокДерева Цикл
		
		Если НЕ СтрокаДереваВидОбъекта.Пометка Тогда
			Продолжить;
		КонецЕсли; 
		
		КоллекцияСтрокДереваВидОбъекта = СтрокаДереваВидОбъекта.ПолучитьЭлементы();
	
		Для каждого СтрокаДерева Из КоллекцияСтрокДереваВидОбъекта Цикл
			
			Если НЕ СтрокаДерева.Пометка Тогда
				Продолжить;
			КонецЕсли; 
			
			ПолноеИмяРегистра = СтрШаблон("%1.%2", СтрокаДереваВидОбъекта.Имя, СтрокаДерева.Имя);
			
			ИменаРегистров.Добавить(ПолноеИмяРегистра);
			
		КонецЦикла; 
	
	КонецЦикла; 
	
	Возврат ИменаРегистров;

КонецФункции

&НаСервере
Функция ПодготовитьИменаОчищаемыхТаблиц(ИменаРегистров)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	ИменаОчищаемыхТаблиц = ОбработкаОбъект.ПодготовитьИменаОчищаемыхТаблиц(ИменаРегистров);
	
	Возврат ИменаОчищаемыхТаблиц;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОчиститьТаблицыСредствамиSQL(Connection, ПараметрыПодлючения, ИменаОчищаемыхТаблиц)
	
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		Command.ActiveConnection = Connection;
		
		ТекстКоманды = 
			"USE " + ПараметрыПодлючения.ИмяБД + " 
			|";
		
		Для каждого ИмяТаблицы Из ИменаОчищаемыхТаблиц Цикл
		
			ТекстКоманды = ТекстКоманды + "
				|TRUNCATE TABLE [DBO].[" + ИмяТаблицы + "]
				|";
		
		КонецЦикла; 
		
		Command.CommandText = ТекстКоманды;
		Command.Execute();
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;	

КонецПроцедуры

&НаКлиенте
Процедура РекурсивноВнизСнятьУстановитьПометки(ВетвьДерева, Пометка)
	
	ВетвьДереваСтроки = ВетвьДерева.ПолучитьЭлементы();

	Для каждого СтрокаДерева Из ВетвьДереваСтроки Цикл
		СтрокаДерева.Пометка = Пометка;	
	    РекурсивноВнизСнятьУстановитьПометки(СтрокаДерева, Пометка);
	КонецЦикла; 		

КонецПроцедуры

&НаКлиенте
Процедура РекурсивноВверхСнятьУстановитьПометки(ВетвьДерева, Пометка)
	
	ВетвьДереваРодитель = ВетвьДерева.ПолучитьРодителя();
	
	Если НЕ ВетвьДереваРодитель = Неопределено Тогда
		ВетвьДереваРодитель.Пометка = Пометка;	
		РекурсивноВверхСнятьУстановитьПометки(ВетвьДереваРодитель, Пометка);
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()

	Элементы.ИмяПользователя.Доступность = НЕ Объект.АутентификацияОС;
	Элементы.Пароль.Доступность = НЕ Объект.АутентификацияОС;

КонецПроцедуры

#КонецОбласти
